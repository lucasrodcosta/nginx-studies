worker_processes 1;

events {
  worker_connections 1024;
}

error_log stderr debug;

http {
  resolver 127.0.0.11 ipv6=off;

  lua_package_path "/usr/local/openresty/lualib/?.lua;/usr/local/openresty/luajit/share/lua/5.1/?.lua;/lua/src/?.lua";
  lua_package_cpath "/usr/local/openresty/lualib/?.so;/usr/local/openresty/luajit/lib/lua/5.1/?.so;";

  access_log /dev/stdout;

  sendfile on;

  # -----------------------------------
  # upstream
  # -----------------------------------
  upstream my_upstream {
    server 127.0.0.1:8090;
    keepalive 10;
  }

  # -----------------------------------
  # server HTTP
  # -----------------------------------
  server {
    listen 8080;

    location / {
      access_by_lua_block {
        ngx.log(ngx.ERR, "access_lua_block HTTP")
      }

      set_by_lua_block $cache_key { return ngx.var.host .. ngx.var.uri }
      proxy_cache_key $cache_key;

      proxy_pass http://my_upstream/$uri;
    }
  }

  # -----------------------------------
  # server HTTPS
  # -----------------------------------
  server {
    listen 443;

    ssl                 on;
    ssl_certificate     server.crt;
    ssl_certificate_key server.key;

    ssl_protocols             SSLv2 SSLv3 TLSv1;
    ssl_ciphers               ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;
    ssl_prefer_server_ciphers on;

    location / {
      access_by_lua_block {
        ngx.log(ngx.ERR, "access_lua_block HTTPS")
      }

      root /data;
    }
  }

  # -----------------------------------
  # server upstream
  # -----------------------------------
  server {
    listen 8090;

    location / {
      access_by_lua_block {
        ngx.log(ngx.INFO, "upstream")
      }

      root /data;
    }
  }
}
